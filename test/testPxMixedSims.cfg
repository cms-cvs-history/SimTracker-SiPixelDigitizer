process TestPixelMixedSimHits = {

  service = MessageLogger {
   # vstring destinations   = { "debugmessages.txt" }
   untracked vstring destinations   = { "cout" }
   untracked PSet cout = {
    untracked PSet default  = { untracked int32 limit = -1 } # kill all messages 
   }
   untracked PSet debugmessages.txt = { untracked string threshold = "DEBUG"}
  }

   source = PoolSource { 
     #
     # Please use a file of SimHits mixed with MixingModule.
     # The module will terminate if no CrossingFrame collection 
     # is present.
     #	
     untracked vstring fileNames = {'file:mix_digi.root'}
      untracked int32 maxEvents = 10000
      untracked uint32 debugVebosity = 10
      untracked bool   debugFlag     = true
   }

   #Geometry
   # fill CMS
   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
   # Tracker only 
   # include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"

   # Tracker Geometry Builder
   include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
 
   # Tracker Numbering Builder
   include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

   #Magnetic Field
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
 
  module analysis =  PixelMixedSimHitsTest {
	vstring ROUList = {"TrackerHitsPixelBarrelLowTof","TrackerHitsPixelBarrelHighTof"}
	#,"TrackerHitsPixelEndcapLowTof","TrackerHitsPixelEndcapHighTof"}
  }

  # module analysis =  PixelSimHitsTestForward {}

#        module out = PoolOutputModule {
#               untracked string fileName = 'tmp.root'
#        }
#	path p = {analysis,out}

	path p = {analysis}
}
