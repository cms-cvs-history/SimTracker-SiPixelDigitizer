process ProcessPixelDigitizer = {

	source = PoolSource { 
          # untracked vstring fileNames = {'file:simevent.root'}
	  untracked vstring fileNames = {
 	'/store/unmerged/RelVal/2006/8/13/RelVal090SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/167B2949-0D2B-DB11-8696-0007E91A18D5.root  '
# '/store/unmerged/RelVal/2006/8/13/RelVal090SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/72C5F2D8-0D2B-DB11-B300-000E0C3E6C4E.root  ',
# '/store/unmerged/RelVal/2006/8/13/RelVal090SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/FCE27F93-0F2B-DB11-AB49-0007E91F8BC0.root  ',
# '/store/unmerged/RelVal/2006/8/13/RelVal090SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/2C022146-0D2B-DB11-8B31-0002B3D8F9B4.root  ',
# '/store/unmerged/RelVal/2006/8/13/RelVal090SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/1A37FBD6-102B-DB11-9934-000E0C4DEC10.root  ',
# '/store/unmerged/RelVal/2006/8/13/RelVal090SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/AA0F500C-0F2B-DB11-9658-0002B3AFB376.root  ',
# '/store/unmerged/RelVal/2006/8/13/RelVal090SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/EAB9A480-102B-DB11-AFB0-0002B3D8DF2C.root  ',
# '/store/unmerged/RelVal/2006/8/13/RelVal090SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/82316432-0D2B-DB11-9BEB-0002B3D8EA94.root  ',
# '/store/unmerged/RelVal/2006/8/13/RelVal090SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/CC70A17B-112B-DB11-A27F-0002B3D8E4F2.root  ',
               }
          untracked int32 maxEvents      = -1
          untracked uint32 debugVebosity = 100
          untracked bool   debugFlag     = true
	}

  # Initialize magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # Fill CMS Geometry
  # include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
  # Tracker SimGeometryXML
  include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"

 
  # Tracker Geometry Builder
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  # Tracker Numbering Builder
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

  # PixelDigitizer
  include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"

   module mix = MixingModule
   {
#      secsource input = PoolRASource
#      {
         #
         # starting 050, you can skip secsource block at all if you don't
         # wnat to model mixing/pileup at all;
         # however, an at least "empty mixing" need to be present if you
         # want to perform Ecal/Hcal/CSC/DT digitization - those explicitely
         # require presence of CrossingFrame in the edm::Event
         #
         # alternatively, you can set averageNumber=0 if you don't want
         # to model the pileup
         #
         # to the secsource/PoolRASource, you can give just 1 file or more;
         # this files will make a "concatinated buffer", which will go circular
         # until the loop of primary events is done - thus, it'll never run out
         #
         # WARNING: you can only give miltiple files, if they're generated with
         #          identical sets of tracked parameters;
         #          for example, you canNOT give a file made with a single muon
         #          gun and a file made with a single pion gun, because PartID
         #          is a *tracked* parameter in the gun's PSet;
         #          however, you can merge together files made with other generators,
         #          for example, PythiaSource, because all parameters of it would be
         #          *untracked*
         #
#         untracked vstring fileNames =
#         {'file:/afs/cern.ch/cms/geant4rep/genntpl/muon_simhit_for_pileup.060pre1.root' }
#         string type = "poisson"
#         double averageNumber = 3  # setting this param. to 0 means "No pile-up",
#                                   # that is, digitize current crossing only
#         int32 minBunch = -3
#         int32 maxBunch = 5
#         int32 seed = 1234567
#      }
      int32 bunchspace = 25
   }


  service = MessageLogger {  
	untracked vstring destinations   = { "debugmessages.txt" }
        untracked PSet debugmessages.txt = { untracked string threshold = "INFO"}
        untracked vstring debugModules={"pixdigi"}
  }

  module out = PoolOutputModule {
        untracked string fileName = 'pixdigi.root'
  }

  # when new simhits are digitized
  path p = {mix,siPixelDigis}
  # when I redigitze simhits from a root file which has digis already 
  # path p = {siPixelDigis}
  endpath outpath = { out }
}
