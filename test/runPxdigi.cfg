process ProcessPixelDigitizer = {

	source = PoolSource { 
        # untracked vstring fileNames = {'file:simevent_1k.root'}
        untracked vstring fileNames = {'rfio:/castor/cern.ch/cms/store/RelVal/2006/12/16/RelVal12010MuonsPt10/0000/86DF449D-578D-DB11-9A95-003048726C91.root'}


#	untracked vstring fileNames = {
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/56DE36BF-064C-DB11-B818-0007E91B5F73.root  '} 
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/1437BE0D-064C-DB11-B99F-003048562902.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/06BA2A95-064C-DB11-81DA-0002B3AFB48C.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/1CE8658E-064C-DB11-8C69-0030485611D0.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/ECAC36BF-064C-DB11-B67E-0007E91B5F73.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/EE5EEAA2-064C-DB11-B0E3-00304855D286.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/E6D339AA-064C-DB11-BD0F-000E0C3E6DFB.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/0692BFA5-064C-DB11-B0CA-000E0C4D2C08.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/8E071A80-064C-DB11-B823-0002B3E9123A.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/EA46DD5D-064C-DB11-984D-000E0C3F19A6.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/9C5840AA-064C-DB11-BB07-000E0C3E6DFB.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/984E91DF-064C-DB11-ADCB-0030485629B4.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/76F6F05E-064C-DB11-A068-000E0C3F19A6.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/7CE8B169-064C-DB11-A0C6-0030485627B4.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/FAB78174-064C-DB11-8B1D-00304885B4A6.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/56D23982-064C-DB11-8EE5-003048561200.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/3C355541-064C-DB11-8EA7-00304858DF52.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/56301391-064C-DB11-AFBF-000E0C3F196E.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/C2B29DCC-064C-DB11-A8F8-0007E91B5EA2.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/E2D78F4D-084C-DB11-9C65-00D0B7B86B36.root  ',
#'/store/unmerged/RelVal/2006/9/24/RelVal101SingleMuMinusPt10/GEN-SIM-DIGI-RECO/0005/82BAF9AD-064C-DB11-8316-00304885B4A6.root  '}

         untracked int32 maxEvents      = 100
       #   untracked int32 maxEvents      = -1
          untracked uint32 debugVebosity = 100
          untracked bool   debugFlag     = true
	}

  # Initialize magnetic field
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # Fill CMS Geometry
  # include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
  # Tracker SimGeometryXML
  include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"

 
  # Tracker Geometry Builder
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

  # Tracker Numbering Builder
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

  # PixelDigitizer
  include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"
  # replace siPixelDigis.MissCalibrate = false

   module mix = MixingModule
   {
#      secsource input = PoolRASource
#      {
         #
         # starting 050, you can skip secsource block at all if you don't
         # wnat to model mixing/pileup at all;
         # however, an at least "empty mixing" need to be present if you
         # want to perform Ecal/Hcal/CSC/DT digitization - those explicitely
         # require presence of CrossingFrame in the edm::Event
         #
         # alternatively, you can set averageNumber=0 if you don't want
         # to model the pileup
         #
         # to the secsource/PoolRASource, you can give just 1 file or more;
         # this files will make a "concatinated buffer", which will go circular
         # until the loop of primary events is done - thus, it'll never run out
         #
         # WARNING: you can only give miltiple files, if they're generated with
         #          identical sets of tracked parameters;
         #          for example, you canNOT give a file made with a single muon
         #          gun and a file made with a single pion gun, because PartID
         #          is a *tracked* parameter in the gun's PSet;
         #          however, you can merge together files made with other generators,
         #          for example, PythiaSource, because all parameters of it would be
         #          *untracked*
         #
#         untracked vstring fileNames =
#         {'file:/afs/cern.ch/cms/geant4rep/genntpl/muon_simhit_for_pileup.060pre1.root' }
#         string type = "poisson"
#         double averageNumber = 3  # setting this param. to 0 means "No pile-up",
#                                   # that is, digitize current crossing only
#         int32 minBunch = -3
#         int32 maxBunch = 5
#         int32 seed = 1234567
#      }
      int32 bunchspace = 25
   }


  service = MessageLogger {  
	untracked vstring destinations   = { "debugmessages.txt" }
        untracked PSet debugmessages.txt = { untracked string threshold = "INFO"}
        untracked vstring debugModules={"pixdigi"}
  }

  module out = PoolOutputModule {
        untracked string fileName = 'pixdigi.root'
  }

  # when new simhits are digitized
  path p = {mix,siPixelDigis}
  # when I redigitze simhits from a root file which has digis already 
  # path p = {siPixelDigis}
  endpath outpath = { out }
}
